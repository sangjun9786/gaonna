<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="searchMapper">

	<resultMap type="Category" id="categoryResultMap">
		<result column="CATEGORY_NO" property="categoryNo"/>
		<result column="CATEGORY_NAME" property="categoryName"/>
	</resultMap>
	
	<resultMap id="PerchasedBoResultMap" type="PerchasedBo">
	    <id property="productNo" column="PRODUCT_NO"/>
	    <result property="categoryName" column="CATEGORY_NAME"/>
	    <result property="productTitle" column="PRODUCT_TITLE"/>
	    <result property="productContent" column="PRODUCT_CONTENT"/>
	    <result property="productCount" column="PRODUCT_COUNT"/>
	    <result property="orderNo" column="ORDER_NO"/>
	    <result property="userNo" column="USER_NO"/>
	    <result property="userId" column="USER_ID"/>
	</resultMap>
	
	<!-- ajax - 게시글 수 조회 -->
	<select id="countMyBoard" resultType="int" parameterType="SearchForm">
	<bind name="searchPattern" value="'%' + searchKeyword + '%'" />
		select count(*)
		from PRODUCT_BOARD
		JOIN ORDERS O ON (USER_NO = O.SELLER_ID)
		where O.BUYER_ID = #{userNo}
		<choose>
        <!-- 검색 타입1이 'all'이 아닌 경우 -->
			<when test="searchType1 != 'all'">
				and CATEGORY_NO = #{searchType1}
				<choose>
					<when test="searchType2 == 'title'">
						and PRODUCT_TITLE LIKE #{searchPattern}
					</when>
					<when test="searchType2 == 'content'">
						and PRODUCT_CONTENT LIKE #{searchPattern}
					</when>
					<otherwise>
						and (PRODUCT_TITLE LIKE #{searchPattern} 
							OR PRODUCT_CONTENT LIKE #{searchPattern})
					</otherwise>
				</choose>
			</when>
			<!-- 검색 타입1이 'all'인 경우 -->
			<otherwise>
				<choose>
					<when test="searchType2 == 'title'">
                         and PRODUCT_TITLE LIKE #{searchPattern}
					</when>
					<when test="searchType2 == 'content'">
                         and PRODUCT_CONTENT LIKE #{searchPattern}
					</when>
					<otherwise>
                         and (PRODUCT_TITLE LIKE #{searchPattern} 
                              OR PRODUCT_CONTENT LIKE #{searchPattern})
					</otherwise>
				</choose>
			</otherwise>
		</choose>
	</select>
	
	<!-- ajax - 판매 게시글 조회 -->
	<select id="searchMyBoard" resultMap="PerchasedBoResultMap" parameterType="SearchForm">
	<bind name="searchPattern" value="'%' + searchKeyword + '%'" />
		select *
		from(
			select t.*, rownum as rn
			from (select
					pb.PRODUCT_NO
					,c.CATEGORY_NAME
					,pb.PRICE
					,m.USER_ID
					,pb.USER_NO
					,pb.PRODUCT_TITLE
					,pb.PRODUCT_CONTENT
					,pb.SCORE2
					,O.ORDER_NO
					,O.STATUS
				from PRODUCT_BOARD pb
				JOIN CATEGORY c on (c.CATEGORY_NO=pb.CATEGORY_NO)
				JOIN ORDERS O ON (pb.PRODUCT_NO = O.PRODUCT_NO)
				JOIN MEMBER m ON (m.USER_NO = pb.USER_NO)
				WHERE
	            pb.PRODUCT_NO IN (
	                SELECT O.PRODUCT_NO
	                FROM ORDERS O
	                WHERE O.BUYER_ID = #{userNo}
	            )
				<choose>
	                <!-- 검색 타입1이 'all'이 아닌 경우 -->
	            	<when test="searchType1 != 'all'">
	                    and pb.CATEGORY_NO = #{searchType1}
	                    <choose>
	                        <when test="searchType2 == 'title'">
	                            and pb.PRODUCT_TITLE LIKE #{searchPattern}
	                        </when>
	                        <when test="searchType2 == 'content'">
	                            and pb.PRODUCT_CONTENT LIKE #{searchPattern}
	                        </when>
	                        <otherwise>
	                            and (pb.PRODUCT_TITLE LIKE #{searchPattern} 
	                                 OR pb.PRODUCT_CONTENT LIKE #{searchPattern})
	                        </otherwise>
	                    </choose>
					</when>
					<!-- 검색 타입1이 'all'인 경우 -->
					<otherwise>
						<choose>
							<when test="searchType2 == 'title'">
	                            and pb.PRODUCT_TITLE LIKE #{searchPattern}
							</when>
							<when test="searchType2 == 'content'">
	                            and pb.PRODUCT_CONTENT LIKE #{searchPattern}
							</when>
							<otherwise>
	                            and (pb.PRODUCT_TITLE LIKE #{searchPattern} 
	                                 OR pb.PRODUCT_CONTENT LIKE #{searchPattern})
							</otherwise>
						</choose>
					</otherwise>
				</choose>
				group by pb.PRODUCT_NO
					,c.CATEGORY_NAME
					,pb.PRICE
					,m.USER_ID
					,pb.USER_NO
					,pb.PRODUCT_TITLE
					,pb.PRODUCT_CONTENT
					,pb.SCORE2
					,O.ORDER_NO
					,O.STATUS
				order by pb.PRODUCT_NO desc
				) t
			where rownum &lt;= #{endRow}
			)
		where rn &gt;= #{startRow}
	</select>
	
	
	<select id="getCategory" resultMap="categoryResultMap">
	    SELECT CATEGORY_NO, CATEGORY_NAME FROM CATEGORY
	</select>
	
	<select id="getUserLoca" parameterType="Member" resultType="string">
		SELECT
		    REGEXP_SUBSTR(TRIM(COORD_ADDRESS), '^(.*)\s+[^ ]+$', 1, 1, NULL, 1)
		FROM COORDS
		JOIN MEMBER ON(COORD_NO = MAIN_COORD)
		WHERE USER_NO = #{userNo}
	</select>
	
	<select id="getLoca" parameterType="string" resultType="string">
		SELECT DISTINCT
		    REGEXP_SUBSTR(TRIM(COORD_ADDRESS), '[^ ]+$')
		FROM COORDS
		WHERE REGEXP_SUBSTR(TRIM(COORD_ADDRESS), '^(.*)\s+[^ ]+$', 1, 1, NULL, 1) = #{userLoca}
		ORDER BY 1
	</select>
	
	<select id="getFilterCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM PRODUCT_BOARD
		LEFT JOIN MEMBER USING(USER_NO)
		LEFT JOIN COORDS ON(MAIN_COORD = COORD_NO)
		<where>
			PRODUCT_BOARD.STATUS = 'N'
			<if test="location != 'all'">
			    AND REGEXP_SUBSTR(TRIM(COORD_ADDRESS), '[^ ]+$') = #{location}
			</if>
			<if test="category != 0">
				AND CATEGORY_NO = #{category}
			</if>
			<if test="price1 != null and price2 != null">
			    <choose>
			        <when test="price1 &lt;= price2">
			            AND PRICE BETWEEN #{price1} AND #{price2}
			        </when>
			        <otherwise>
			            AND PRICE BETWEEN #{price2} AND #{price1}
			        </otherwise>
			    </choose>
			</if>
			<if test="keyword != ''">
				AND (PRODUCT_TITLE LIKE '%'||#{keyword}||'%' OR PRODUCT_CONTENT LIKE '%'||#{keyword}||'%')
			</if>
		</where>
	</select>
	
	<select id="productFilter" resultMap="productAttachmentMap">
	      SELECT 
	        pb.PRODUCT_NO,
	        pb.CATEGORY_NO,
	        c.CATEGORY_NAME, 
	        pb.SCORE,
	        pb.USER_NO,
	        pb.PRICE,
	        pb.UPLOAD_DATE,
	        pb.PRODUCT_COUNT,
	        pb.PRODUCT_TITLE,
	        pb.PRODUCT_CONTENT,
	        pb.STATUS AS PB_STATUS,
	
	        m.USER_ID,
	        m.USER_NAME,
	        m.MAIN_COORD,
	
	        c.COORD_ADDRESS,  
	
	        at.FILE_NO,
	        at.PRODUCT_NO,
	        at.ORIGIN_NAME,
	        at.CHANGE_NAME,
	        at.FILE_PATH,
	        at.UPLOAD_DATE AS AT_UPLOAD_DATE,
	        at.FILE_LEVEL,
	        at.STATUS AS AT_STATUS

	    FROM PRODUCT_BOARD pb
	    JOIN MEMBER m ON pb.USER_NO = m.USER_NO
	    LEFT JOIN COORDS c ON m.MAIN_COORD = c.COORD_NO
	    LEFT JOIN ATTATCHMENT at
	        ON pb.PRODUCT_NO = at.PRODUCT_NO
	        AND at.FILE_LEVEL = 1
	        AND at.STATUS = 'Y'
	    JOIN CATEGORY c ON pb.CATEGORY_NO = c.CATEGORY_NO
	    <where>
	    	pb.STATUS = 'N'
	    	<if test="location != 'all'">
			    AND REGEXP_SUBSTR(TRIM(COORD_ADDRESS), '[^ ]+$') = #{location}
			</if>
	    	<if test="category != 0">
				AND pb.CATEGORY_NO = #{category}
			</if>
			<if test="price1 != null and price2 != null">
			    <choose>
			        <when test="price1 &lt;= price2">
			            AND pb.PRICE BETWEEN #{price1} AND #{price2}
			        </when>
			        <otherwise>
			            AND pb.PRICE BETWEEN #{price2} AND #{price1}
			        </otherwise>
			    </choose>
			</if>
			<if test="keyword != ''">
				AND (PRODUCT_TITLE LIKE '%'||#{keyword}||'%' OR PRODUCT_CONTENT LIKE '%'||#{keyword}||'%')
			</if>
	    </where>
	    ORDER BY pb.UPLOAD_DATE DESC
	</select>
	
	<resultMap id="productAttachmentMap" type="Product">
	    <!-- 기존 product 필드 -->
	    <id property="productNo" column="PRODUCT_NO"/>
	    <result property="categoryNo" column="CATEGORY_NO"/>
	    <result property="score" column="SCORE"/>
	    <result property="userNo" column="USER_NO"/>
	    <result property="price" column="PRICE"/>
	    <result property="uploadDate" column="UPLOAD_DATE"/>
	    <result property="productCount" column="PRODUCT_COUNT"/>
	    <result property="productTitle" column="PRODUCT_TITLE"/>
	    <result property="productContent" column="PRODUCT_CONTENT"/>
	    <result property="status" column="PB_STATUS"/>
	    <result property="coordAddress" column="COORD_ADDRESS"/>
		<result property="userId" column="USER_ID"/>
		<result property="userName" column="USER_NAME"/>
		<result property="categoryName" column="CATEGORY_NAME"/>
		<result property="wishCount" column="WISH_COUNT"/>
	
	    <!-- 첨부파일 atList 필드 매핑 -->
	    <collection property="atList" ofType="Attachment">
	        <id property="fileNo" column="FILE_NO"/>
	        <result property="productBno" column="AT_PRODUCT_NO"/>
	        <result property="originName" column="ORIGIN_NAME"/>
	        <result property="changeName" column="CHANGE_NAME"/>
	        <result property="filePath" column="FILE_PATH"/>
	        <result property="uploadDate" column="AT_UPLOAD_DATE"/>
	        <result property="fileLevel" column="FILE_LEVEL"/>
	        <result property="status" column="AT_STATUS"/>
	    </collection>
	</resultMap>
	
	<select id="recommendProduct" resultMap="productAttachmentMap">
	      SELECT *
			FROM (
			    SELECT 
			    pb.PRODUCT_NO,
			    pb.CATEGORY_NO,
			    ct.CATEGORY_NAME, 
			    pb.SCORE,
			    pb.USER_NO,
			    pb.PRICE,
			    pb.UPLOAD_DATE,
			    pb.PRODUCT_COUNT,
			    pb.PRODUCT_TITLE,
			    pb.PRODUCT_CONTENT,
			    pb.STATUS AS PB_STATUS,
			    m.USER_ID,
			    m.USER_NAME,
			    m.MAIN_COORD,
			    c.COORD_ADDRESS,  
			    at.FILE_NO,
			    at.PRODUCT_NO AS AT_PRODUCT_NO,
			    at.ORIGIN_NAME,
			    at.CHANGE_NAME,
			    at.FILE_PATH,
			    at.UPLOAD_DATE AS AT_UPLOAD_DATE,
			    at.FILE_LEVEL,
			    at.STATUS AS AT_STATUS,
			    NVL(wl.WISH_COUNT, 0) AS WISH_COUNT
			FROM PRODUCT_BOARD pb
			JOIN MEMBER m ON pb.USER_NO = m.USER_NO
			LEFT JOIN COORDS c ON m.MAIN_COORD = c.COORD_NO
			LEFT JOIN ATTATCHMENT at ON pb.PRODUCT_NO = at.PRODUCT_NO AND at.FILE_LEVEL = 1 AND at.STATUS = 'Y'
			JOIN CATEGORY ct ON pb.CATEGORY_NO = ct.CATEGORY_NO
			LEFT JOIN (
			    SELECT PRODUCT_NO, COUNT(*) AS WISH_COUNT
			    FROM WISHLIST
			    GROUP BY PRODUCT_NO
			) wl ON pb.PRODUCT_NO = wl.PRODUCT_NO
			WHERE pb.STATUS = 'N'
			ORDER BY wl.WISH_COUNT DESC, pb.UPLOAD_DATE DESC

		)
		WHERE ROWNUM &lt;= 4
	</select>
	
	<select id="recommendMember" resultMap="productAttachmentMap">
	      SELECT *
			FROM (
			    SELECT 
			        pb.PRODUCT_NO,
			        pb.CATEGORY_NO,
			        ct.CATEGORY_NAME, 
			        pb.SCORE,
			        pb.USER_NO,
			        pb.PRICE,
			        pb.UPLOAD_DATE,
			        pb.PRODUCT_COUNT,
			        pb.PRODUCT_TITLE,
			        pb.PRODUCT_CONTENT,
			        pb.STATUS AS PB_STATUS,
			
			        m.USER_ID,
			        m.USER_NAME,
			        m.MAIN_COORD,
			
			        c.COORD_ADDRESS,  
			
			        at.FILE_NO,
			        at.PRODUCT_NO AS AT_PRODUCT_NO,
			        at.ORIGIN_NAME,
			        at.CHANGE_NAME,
			        at.FILE_PATH,
			        at.UPLOAD_DATE AS AT_UPLOAD_DATE,
			        at.FILE_LEVEL,
			        at.STATUS AS AT_STATUS
			
			    FROM PRODUCT_BOARD pb
			    JOIN MEMBER m ON pb.USER_NO = m.USER_NO
			    LEFT JOIN COORDS c ON m.MAIN_COORD = c.COORD_NO
			    LEFT JOIN ATTATCHMENT at
			        ON pb.PRODUCT_NO = at.PRODUCT_NO
			        AND at.FILE_LEVEL = 1
			        AND at.STATUS = 'Y'
			    JOIN CATEGORY ct ON pb.CATEGORY_NO = ct.CATEGORY_NO
			    JOIN SCORE s ON m.USER_NO = s.USER_NO
			    WHERE pb.STATUS = 'N'
			    ORDER BY s.AVG_RATING DESC, pb.UPLOAD_DATE DESC
		)
		WHERE ROWNUM &lt;= 16
	</select>
	
	<select id="searchBread" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM BAKERY
		WHERE BAKERY_NAME = #{keyword}
	</select>
	
	<select id="getBread" parameterType="string" resultType="string">
		SELECT BAKERY_NO
		FROM BAKERY
		WHERE BAKERY_NAME = #{keyword}
	</select>
	
	
	
</mapper>