<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="compositeMapper">
	
	<resultMap type="Category" id="categoryResultMap">
		<result column="CATEGORY_NO" property="categoryNo"/>
		<result column="CATEGORY_NAME" property="categoryName"/>
	</resultMap>
	<resultMap type="ReplyCo" id="replyCoResultMap">
		<result column="REPLY_NO" property="replyNo"/>
		<result column="PRODUCT_NO" property="productNo"/>
		<result column="PRODUCT_TITLE" property="productTitle"/>
		<result column="USER_ID" property="userId"/>
		<result column="USER_NAME" property="userName"/>
		<result column="REPLY_TEXT" property="replyText"/>
		<result column="REPLY_DATE" property="replyDate"/>
	</resultMap>
	<resultMap id="boardCoResultMap" type="BoardCo">
	    <id property="productNo" column="PRODUCT_NO"/>
	    <result property="categoryName" column="CATEGORY_NAME"/>
	    <result property="uploadDate" column="UPLOAD_DATE"/>
	    <result property="productTitle" column="PRODUCT_TITLE"/>
	    <result property="productContent" column="PRODUCT_CONTENT"/>
	    <result property="price" column="PRICE"/>                    
    	<result property="orderNo" column="ORDER_NO"/>              
	    <result property="replyCount" column="REPLY_COUNT"/>
	    <result property="orderStatus" column="ORDERSTATUS"/> 
	    <result property="productCount" column="PRODUCT_COUNT"/>
	</resultMap>
	<resultMap type="BakeryComment" id="bakeryCommentResultMap">
		<result column="COMMENT_NO" property="commentNo"/>
		<result column="PARENT_COMMENT_NO" property="parentCommentNo"/>
		<result column="COMMENT_CONTENT" property="commentContent"/>
		<result column="COMMENT_TYPE" property="commentType"/>
		<result column="BAKERY_NO" property="bakeryNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="USER_NAME" property="userName"/>
		<result column="COMMENT_DATE" property="commentDate"/>
		<result column="BAKERY_LIKE" property="bakeryLike"/>
	</resultMap>
	
	<!-- ajax - 카테고리 조회 -->
	<select id="selectCategory" resultMap="categoryResultMap">
		select CATEGORY_NO,CATEGORY_NAME
		from category
	</select>
	
	<!-- ajax - 게시글 수 조회 -->
	<select id="countMyBoard" resultType="int" parameterType="SearchForm">
	<bind name="searchPattern" value="'%' + searchKeyword + '%'" />
		select count(*)
		from PRODUCT_BOARD pb
      	LEFT JOIN (
	        SELECT *
	        FROM ORDERS o1
	        WHERE o1.ORDER_NO IN (
	          SELECT MAX(o2.ORDER_NO)
	          FROM ORDERS o2
	          GROUP BY o2.PRODUCT_NO
	        )
	      ) o ON o.PRODUCT_NO = pb.PRODUCT_NO
		where user_no = #{userNo}
	      <choose>
	        <when test="searchType1 == 'sell'">
	          AND (o.STATUS NOT IN ('REQ', 'BUYER_OK', 'DONE') OR o.STATUS IS NULL)
	        </when>
	        <when test="searchType1 == 'selling'">
	          AND o.STATUS in ('REQ', 'BUYER_OK')
	        </when>
	        <when test="searchType1 == 'selled'">
	          AND o.STATUS = 'DONE'
	        </when>
          </choose>
          <choose>
            <when test="searchType2 == 'title'">
              AND pb.PRODUCT_TITLE LIKE #{searchPattern}
            </when>
            <when test="searchType2 == 'content'">
              AND pb.PRODUCT_CONTENT LIKE #{searchPattern}
            </when>
            <otherwise>
              AND (pb.PRODUCT_TITLE LIKE #{searchPattern}
                   OR pb.PRODUCT_CONTENT LIKE #{searchPattern})
            </otherwise>
	      </choose>
	</select>
	
	<!-- ajax - 판매 게시글 조회 -->
	<select id="searchMyBoard" resultMap="boardCoResultMap" parameterType="SearchForm">
	<bind name="searchPattern" value="'%' + searchKeyword + '%'" />
	  SELECT *
	  FROM (
	    SELECT t.*, ROWNUM AS rn
	    FROM (
	      SELECT 
	        pb.PRODUCT_NO,
	        pb.PRODUCT_TITLE,
	        pb.PRODUCT_CONTENT,
	        pb.PRICE,
	        pb.UPLOAD_DATE,
	        c.CATEGORY_NAME,
	        o.ORDER_NO,
	        o.STATUS AS ORDERSTATUS,     -- ★ 주문 상태 따로 뽑기
	        COUNT(r.REPLY_NO) AS COUNT_REPLY
	      FROM PRODUCT_BOARD pb
	      LEFT JOIN CATEGORY c ON c.CATEGORY_NO = pb.CATEGORY_NO
	      LEFT JOIN (
	        SELECT *
	        FROM ORDERS o1
	        WHERE o1.ORDER_NO IN (
	          SELECT MAX(o2.ORDER_NO)
	          FROM ORDERS o2
	          GROUP BY o2.PRODUCT_NO
	        )
	      ) o ON o.PRODUCT_NO = pb.PRODUCT_NO
	      LEFT JOIN REPLY r ON r.PRODUCT_NO = pb.PRODUCT_NO
	      WHERE pb.USER_NO = #{userNo}
	      
	      <choose>
	        <when test="searchType1 == 'sell'">
	          AND (o.STATUS NOT IN ('REQ', 'BUYER_OK', 'DONE') OR o.STATUS IS NULL)
	        </when>
	        <when test="searchType1 == 'selling'">
	          AND o.STATUS in ('REQ', 'BUYER_OK')
	        </when>
	        <when test="searchType1 == 'selled'">
	          AND o.STATUS = 'DONE'
	        </when>
          </choose>
          <choose>
            <when test="searchType2 == 'title'">
              AND pb.PRODUCT_TITLE LIKE #{searchPattern}
            </when>
            <when test="searchType2 == 'content'">
              AND pb.PRODUCT_CONTENT LIKE #{searchPattern}
            </when>
            <otherwise>
              AND (pb.PRODUCT_TITLE LIKE #{searchPattern}
                   OR pb.PRODUCT_CONTENT LIKE #{searchPattern})
            </otherwise>
	      </choose>
	
	      GROUP BY pb.PRODUCT_NO, pb.PRODUCT_TITLE, pb.PRODUCT_CONTENT, pb.PRICE,
	               pb.UPLOAD_DATE, c.CATEGORY_NAME, o.ORDER_NO, o.STATUS
	      ORDER BY pb.UPLOAD_DATE DESC
	    ) t
	    WHERE ROWNUM &lt;= #{endRow}
	  )
	  WHERE rn &gt;= #{startRow}
	</select>
	
	<!-- ajax - 판매 게시판 댓글 수 조회 -->
	<select id="countMyReply" resultType="int" parameterType="SearchForm">
		select count(*)
		from REPLY p
		left join PRODUCT_BOARD pb on (p.PRODUCT_NO=pb.PRODUCT_NO)
		where p.user_id = #{userId}
	</select>
	
	<!-- ajax - 판매 게시판 댓글 조회 -->
	<select id="searchMyReply" resultMap="replyCoResultMap" parameterType="SearchForm">
		select *
		from(
			select REPLY_NO
					,PRODUCT_NO
					,PRODUCT_TITLE
					,USER_ID
					,USER_NAME
					,REPLY_TEXT
					,REPLY_DATE
					,rownum as rn
			from (select
					p.REPLY_NO
					,p.PRODUCT_NO
					,pb.PRODUCT_TITLE
					,p.USER_ID
					,m.USER_NAME
					,p.REPLY_TEXT
					,p.REPLY_DATE
				from REPLY p
				left join PRODUCT_BOARD pb on (p.PRODUCT_NO=pb.PRODUCT_NO)
				left join MEMBER m on (m.user_no = pb.user_no)
				where p.user_id = #{userId}
				order by REPLY_DATE desc
				)
			where rownum &lt;= #{endRow}
			)
		where rn &gt;= #{startRow}
	</select>
	
	<!-- ajax - 우리동네빵집 댓글 수 조회 -->
	<select id="countMyReplyDongne" resultType="int" parameterType="SearchForm">
		select count(*)
		from BAKERY_COMMENT
		where user_no = #{userNo}
		and status in ('Y', 'M')
	</select>
	
	<!-- ajax - 우리동네빵집 댓글 조회 -->
	<select id="searchMyReplyDongne" resultMap="bakeryCommentResultMap" parameterType="SearchForm">
		select *
		from(
			select comment_no
				    ,parent_comment_no
				    ,comment_content
				    ,comment_type
				    ,bakery_no
				    ,comment_date
				    ,bakery_like
				    ,status
					,rownum as rn
			from (select
						BC.comment_no,
					    BC.parent_comment_no,
					    BC.comment_content,
					    BC.comment_type,
					    BC.bakery_no,
					    BC.comment_date,
					    BC.bakery_like,
					    BC.status
				from BAKERY_COMMENT BC
				left join bakery b on(bc.bakery_no = b.bakery_no)
				where BC.user_no = #{userNo}
				and bc.status in ('Y', 'M')
				order by BC.COMMENT_DATE desc
				)
			where rownum &lt;= #{endRow}
			)
		where rn &gt;= #{startRow}
	</select>
	
	<select id="countMyWishlist" parameterType="int" resultType="int">
		select count(*)
		from wishlist
		where user_no = #{userNo}
	</select>
	
	<select id="searchMyWishlist" parameterType="map" resultMap="boardCoResultMap">
		select *
		from(
			select t.*, rownum as rn
			from (select
					pb.PRODUCT_NO
					,c.CATEGORY_NAME
					,pb.PRICE
					,pb.UPLOAD_DATE
					,pb.PRODUCT_TITLE
					,pb.PRODUCT_CONTENT
					,pb.STATUS
					,count(r.REPLY_NO) as COUNT_REPLY
				from PRODUCT_BOARD pb
				right join wishlist w on(w.PRODUCT_NO = pb.PRODUCT_NO)
				left join CATEGORY c on (c.CATEGORY_NO=pb.CATEGORY_NO)
				left join REPLY r on(r.PRODUCT_NO = pb.PRODUCT_NO)
				where w.user_no = #{userNo}
				group by pb.PRODUCT_NO, c.CATEGORY_NAME, pb.PRICE,
	                pb.UPLOAD_DATE, pb.PRODUCT_TITLE,
	                pb.PRODUCT_CONTENT, pb.STATUS
				) t
			where rownum &lt;= #{endRow}
			)
		where rn &gt;= #{startRow}
	</select>
	
	
	<delete id="deleteMyWishlist" parameterType="map">
		delete from wishlist	
		where PRODUCT_NO = #{productNo}
		and user_no = #{userNo}
	</delete>
</mapper>