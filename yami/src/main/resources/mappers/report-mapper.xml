<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="reportMapper">

    <!-- 1. 신고 등록 -->
    <insert id="insertReport" parameterType="report">
        INSERT INTO REPORT (
            REPORT_NO,
            REPORT_TYPE,
            TARGET_NO,
            REPORTER_NO,
            REASON,
            CONTENT,
            STATUS,
            CREATED_AT
        ) VALUES (
            SEQ_REPORT.NEXTVAL,
            #{reportType},
            #{targetNo},
            #{reporterNo},
            #{reason},
            #{content},
            'P',
            SYSDATE
        )
    </insert>

    <!-- 2. 신고 목록 조회 -->
    <select id="selectReportList" parameterType="map" resultType="map">
	    SELECT 
	        R.REPORT_NO,
	        R.REPORT_TYPE,
	        R.TARGET_NO,
	        R.REPORTER_NO,
	        R.REASON,
	        R.CONTENT,
	        R.STATUS,
	        R.CREATED_AT,
	        R.HANDLED_AT,
	        M.USER_NAME AS REPORTERNAME
	    FROM REPORT R
	    JOIN MEMBER M ON R.REPORTER_NO = M.USER_NO
	    <where>
	        <if test="statusList != null">
	            AND R.STATUS IN
	            <foreach collection="statusList" item="st" open="(" close=")" separator=",">
	                #{st}
	            </foreach>
	        </if>
	        <if test="status != null and status != ''">
	            AND R.STATUS = #{status}
	        </if>
	        <if test="reportType != null and reportType != ''">
	            AND R.REPORT_TYPE = #{reportType}
	        </if>
	    </where>
	    ORDER BY R.CREATED_AT DESC
	</select>

    <!-- 3. 신고 상세 조회 -->
    <select id="selectReportByNo" parameterType="int" resultType="map">
	    SELECT 
	        R.REPORT_NO,
	        R.REPORT_TYPE,
	        R.TARGET_NO,
	        R.REPORTER_NO,
	        R.REASON,
	        R.CONTENT,
	        R.STATUS,
	        R.CREATED_AT,
	        R.HANDLED_AT,
	        M.USER_NAME AS REPORTERNAME
	    FROM REPORT R
	    JOIN MEMBER M ON R.REPORTER_NO = M.USER_NO
	    WHERE REPORT_NO = #{reportNo}
	</select>

    <!-- 4. 신고 상태 변경 -->
    <update id="updateReportStatus" parameterType="map">
	    UPDATE REPORT
	    SET STATUS = #{status},
	        HANDLED_AT = SYSDATE
	    WHERE REPORT_NO = #{reportNo}
	</update>

    <!-- 5. 신고 카운트 -->
    <select id="countReport" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM REPORT
        <where>
            <if test="status != null and status != ''">
                AND STATUS = #{status}
            </if>
            <if test="reportType != null and reportType != ''">
                AND REPORT_TYPE = #{reportType}
            </if>
        </where>
    </select>

    <!-- 6. 게시글 작성자 번호 -->
    <select id="findProductWriterNo" parameterType="int" resultType="int">
        SELECT USER_NO
        FROM PRODUCT_BOARD
        WHERE PRODUCT_NO = #{productNo}
    </select>

    <!-- 7. 댓글 작성자 번호 -->
    <select id="findReplyWriterNo" parameterType="int" resultType="string">
        SELECT USER_ID
        FROM REPLY
        WHERE REPLY_NO = #{replyNo}
    </select>

    <!-- 8. 채팅 메시지 작성자 번호 -->
    <select id="findChatWriterNo" parameterType="int" resultType="int">
        SELECT SENDER_NO
        FROM CHAT_MESSAGE
        WHERE MESSAGE_NO = #{messageNo}
    </select>

    <!-- 9. 신고 횟수 -->
    <select id="countHandledReportsByUser" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM REPORT R
        WHERE R.STATUS = 'Y'
          AND (
            (R.REPORT_TYPE = 'post' AND EXISTS (
                SELECT 1 FROM PRODUCT_BOARD P
                WHERE R.TARGET_NO = P.PRODUCT_NO
                  AND P.USER_NO = #{userNo}
            ))
            OR
            (R.REPORT_TYPE = 'chat' AND EXISTS (
                SELECT 1 FROM CHAT_MESSAGE CM
                WHERE R.TARGET_NO = CM.MESSAGE_NO
                  AND CM.SENDER_NO = #{userNo}
            ))
            OR
            (R.REPORT_TYPE = 'reply' AND EXISTS (
                SELECT 1 FROM REPLY RP
                WHERE R.TARGET_NO = RP.REPLY_NO
                  AND RP.USER_ID = (SELECT USER_ID FROM MEMBER WHERE USER_NO = #{userNo})
            ))
          )
    </select>
    
    <select id="checkAlreadyReported" parameterType="report" resultType="int">
	    SELECT COUNT(*)
	    FROM REPORT
	    WHERE REPORTER_NO = #{reporterNo}
	      AND REPORT_TYPE = #{reportType}
	      AND TARGET_NO = #{targetNo}
	</select>


</mapper>
