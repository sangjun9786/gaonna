<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="locationMapper">

	<resultMap type="Location" id="locationResultMap">
		<result column="LOCATION_NO" property="locationNo"/>
		<result column="LOCATION_DATE" property="locationDate"/>
		<result column="ROAD_ADDRESS" property="roadAddress"/>
		<result column="JIBUN_ADDRESS" property="jibunAddress"/>
		<result column="DETAIL_ADDRESS" property="detailAddress"/>
		<result column="ZIP_CODE" property="zipCode"/>
	</resultMap>
	
	<resultMap type="Coord" id="coordResultMap">
		<result column="COORD_NO" property="coordNo"/>
		<result column="COORD_ADDRESS" property="coordAddress"/>
		<result column="COORD_DATE" property="coordDate"/>
	</resultMap>
	
	<resultMap type="Bakery" id="bakeryResultMap">
		<result column="BAKERY_NO" property="bakeryNo"/>
		<result column="OPEN_DATE" property="openDate"/>
		<result column="ROAD_ADDRESS" property="roadAddress"/>
		<result column="JIBUN_ADDRESS" property="jibunAddress"/>
		<result column="BAKERY_NAME" property="bakeryName"/>
	</resultMap>
	
	<resultMap type="BakeryComment" id="bakeryCommentResultMap">
		<result column="COMMENT_NO" property="commentNo"/>
		<result column="PARENT_COMMENT_NO" property="parentCommentNo"/>
		<result column="COMMENT_CONTENT" property="commentContent"/>
		<result column="COMMENT_TYPE" property="commentType"/>
		<result column="BAKERY_NO" property="bakeryNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="USER_NAME" property="userName"/>
		<result column="COMMENT_DATE" property="commentDate"/>
	</resultMap>
	
	<select id="selectUserDongne" parameterType="int" resultMap="coordResultMap">
		select c.coord_no, 
			c.latitude,
			c.longitude,
			c.coord_address,
			c.coord_date
		from coords c
		left join member_coords mc
			on (c.coord_no = mc.coord_no)
		left join member m
			on(mc.user_no = m.user_no)
		where m.user_no = #{userNo}
	</select>
	
	<insert id="insertDongne" parameterType="Coord">
		<selectKey keyProperty="coordNo" resultType="int" order="BEFORE">
	        SELECT seq_coords.nextval FROM dual
	    </selectKey>
	    insert into coords(COORD_NO,LATITUDE,LONGITUDE,COORD_ADDRESS,COORD_DATE)
	    values(#{coordNo}, #{latitude}, #{longitude}, #{coordAddress}, SYSDATE)
	</insert>
	
	<insert id="insertMemberCoords" parameterType="map">
	    insert into member_coords(USER_NO, COORD_NO)
	    values(#{userNo}, #{coordNo})
	</insert>
	
	<delete id="deleteCoord" parameterType="int">
		delete from coords
		where coord_no = #{coordNo}
	</delete>
	
	<select id="selectLocation" parameterType="int" resultMap="locationResultMap">
		select l.LOCATION_NO
			,l.LOCATION_DATE
			,l.ROAD_ADDRESS
			,l.JIBUN_ADDRESS
			,l.DETAIL_ADDRESS
			,l.ZIP_CODE
		from location l
		left join member_location ml on(l.LOCATION_NO = ml.LOCATION_NO	)
		left join member m on(m.user_no = ml.user_no)
		where m.user_no = #{userNo}
	</select>
	
	<delete id="deleteLocation" parameterType="int">
		delete from location
		where location_no = #{locationNo}
	</delete>
	
	<insert id="insertLocationMe" parameterType="Location">
		<selectKey keyProperty="locationNo" resultType="int" order="BEFORE">
	        SELECT seq_location.nextval FROM dual
	    </selectKey>
		insert into location(
					LOCATION_NO
					,LOCATION_DATE
					,ROAD_ADDRESS
					,JIBUN_ADDRESS
					,DETAIL_ADDRESS
					,ZIP_CODE)
		values(
			#{locationNo}
			,sysdate
			,#{roadAddress}
			,#{jibunAddress}
			,#{detailAddress}
			,#{zipCode})
	</insert>
	
	<insert id="insertMemberLocation" parameterType="map">
	    insert into member_location(USER_NO, LOCATION_NO)
	    values(#{userNo}, #{locationNo})
	</insert>
	
	
	<!--             동네뽱집 나와바리              -->
	
	<select id="selectBakeries" parameterType="Coord">
	    SELECT * FROM (
	        SELECT 
	            bakery_no,
	            open_date,
	            phone,
	            road_address,
	            jibun_address,
	            bakery_name,
	            latitude,
	            longitude,
	            ACOS(
	                SIN(RADIANS(TO_NUMBER(latitude))) * SIN(RADIANS(#{latitude}))
	                + COS(RADIANS(TO_NUMBER(latitude))) * COS(RADIANS(#{latitude}))
	                * COS(RADIANS(TO_NUMBER(longitude)) - RADIANS(#{longitude}))
	            ) * 6371 AS distance
	        FROM bakery
	        WHERE 
	            TO_NUMBER(latitude) BETWEEN #{latitude} - 0.009 AND #{latitude} + 0.009
	            AND TO_NUMBER(longitude) BETWEEN #{longitude} - (0.009 / COS(RADIANS(#{latitude}))) 
	                AND #{longitude} + (0.009 / COS(RADIANS(#{latitude})))
	    )
	    WHERE distance &lt;= 1
	    ORDER BY distance
	</select>

	
</mapper>