<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="adminMapper">

	<resultMap type="Member" id="memberResultMap">
		<result column="USER_NO" property="userNo"/>
		<result column="USER_ID" property="userId"/>
		<result column="USER_PWD" property="userPwd"/>
		<result column="USER_NAME" property="userName"/>
		<result column="ROLE_TYPE" property="roleType"/>
		<result column="MAIN_COORD" property="mainCoord"/>
		<result column="MAIN_LOCATION" property="mainLocation"/>
	</resultMap>
	<resultMap type="Location" id="locationResultMap">
		<result column="LOCATION_NO" property="locationNo"/>
		<result column="LOCATION_DATE" property="locationDate"/>
		<result column="ROAD_ADDRESS" property="roadAddress"/>
		<result column="JIBUN_ADDRESS" property="jibunAddress"/>
		<result column="DETAIL_ADDRESS" property="detailAddress"/>
		<result column="ZIP_CODE" property="zipCode"/>
	</resultMap>
	<resultMap type="Coord" id="coordResultMap">
		<result column="COORD_NO" property="coordNo"/>
		<result column="COORD_ADDRESS" property="coordAddress"/>
		<result column="COORD_DATE" property="coordDate"/>
	</resultMap>

	<select id="consoleLogin" parameterType="Member" resultMap="memberResultMap">
	    select 
	        m.USER_NO,
	        m.USER_ID,
	        m.USER_PWD,
	        m.USER_NAME,
	        m.PHONE,
	        m.point,
	        m.ENROLLDATE,
	        m.MODIFYDATE,
	        m.STATUS,
	        m.MAIN_COORD,
	        m.MAIN_LOCATION,
	        case 
	            when exists (
	                select 1
	                from ROLE r
	                where r.USER_NO = m.USER_NO
	            ) then 'Y'
	            else 'N'
	        end as ROLE_TYPE
	    from MEMBER m
	    where m.USER_ID = #{userId}
	</select>

	<select id="selectRoleType" parameterType="Member" resultType="string">
		select role_type
		from role
		join member using(user_no)
		where user_no = #{userNo}
	</select>
	
	<select id="searchAdmin" parameterType="string" resultMap="memberResultMap">
		select USER_NO
				,USER_ID
				,USER_PWD
				,USER_NAME
				,PHONE
				,POINT
				,ENROLLDATE
				,MODIFYDATE
				,STATUS
				,MAIN_COORD
				,MAIN_LOCATION
				,role_type
		from member
		join role using(user_no)
		
		<if test="select != 'all'">
			where role_type = #{select}
		</if>
	</select>
	
	<update id="updateAdmin" parameterType="Member">
		update member
		set USER_ID = #{userId}
			,USER_PWD = #{userPwd}
			,USER_NAME = #{userName}
			,PHONE = #{phone}
			,POINT = #{point}
			,STATUS = #{status}
		where user_no = #{userNo}
	</update>
	
	<update id="updateAdminRole" parameterType="Member">
		update role
		set ROLE_TYPE = #{roleType}
		where user_no = #{userNo}
	</update>
	
	<delete id="deleteAdminRole" parameterType="Member">
		delete from role
		where user_no = #{userNo}
	</delete>
	
	<insert id="insertAdmin" parameterType="Member">
		<selectKey keyProperty="userNo" resultType="int" order="BEFORE">
	        SELECT seq_me.nextval FROM dual
	    </selectKey>
		insert into member
				(USER_NO
				,USER_ID
				,USER_PWD
				,USER_NAME
				,PHONE
				,POINT
				,ENROLLDATE
				,STATUS)
		values(
				#{userNo}
				,#{userId}
				,#{userPwd}
				,#{userName}
				,#{phone}
				,#{point}
				,SYSDATE
				,'Y')
	</insert>
	
	<insert id="insertAdminRole" parameterType="Member">
		insert into role(USER_NO,ROLE_TYPE)
		values(#{userNo}, #{roleType})
	</insert>
	
	<select id="searchMemberAll" resultMap="memberResultMap">
		select * 
		from(
			select USER_NO
					,USER_ID
					,USER_PWD
					,USER_NAME
					,PHONE
					,POINT
					,ENROLLDATE
					,MODIFYDATE
					,STATUS
					,MAIN_COORD
					,MAIN_LOCATION
					,rownum as rn
			from(
				select m.USER_NO
						,m.USER_ID
						,m.USER_PWD
						,m.USER_NAME
						,m.PHONE
						,m.POINT
						,m.ENROLLDATE
						,m.MODIFYDATE
						,m.STATUS
						,m.MAIN_COORD
						,m.MAIN_LOCATION
				from member m
				<where>
	                <if test="searchKeyword != null and searchKeyword != ''">
	                    (m.USER_NO LIKE '%' || #{searchKeyword} || '%'
	                    OR m.USER_ID LIKE '%' || #{searchKeyword} || '%'
	                    OR m.USER_NAME LIKE '%' || #{searchKeyword} || '%'
	                    OR m.PHONE LIKE '%' || #{searchKeyword} || '%')
	                </if>
	                
	                AND not EXISTS (
	                    SELECT 1
	                    FROM role r 
	                    WHERE r.USER_NO = m.USER_NO
                	)
            	</where>
				order by m.USER_NO
				)
			where rownum &lt;= #{endRow}
			)
		where rn &gt;= #{startRow}
	</select>
	
	
	<select id="searchMember" resultMap="memberResultMap">
		select * 
		from(
			select USER_NO
					,USER_ID
					,USER_PWD
					,USER_NAME
					,PHONE
					,POINT
					,ENROLLDATE
					,MODIFYDATE
					,STATUS
					,MAIN_COORD
					,MAIN_LOCATION
					,rownum as rn
			from(
				select m.USER_NO
						,m.USER_ID
						,m.USER_PWD
						,m.USER_NAME
						,m.PHONE
						,m.POINT
						,m.ENROLLDATE
						,m.MODIFYDATE
						,m.STATUS
						,m.MAIN_COORD
						,m.MAIN_LOCATION
				from member m
				<where>
					<choose>
						<when test="searchType == 'no'">
						m.user_no = #{searchKeyword}
						</when>
						<when test="searchType == 'id'">
						m.user_id like '%' || #{searchKeyword} ||'%'
						</when>
						<when test="searchType == 'name'">
						m.user_name like '%' || #{searchKeyword} ||'%'
						</when>
						<when test="searchType == 'phone'">
						m.phone = #{searchKeyword}
						</when>
					</choose>
					
					AND not EXISTS (
	                    SELECT 1 
	                    FROM role r 
	                    WHERE r.USER_NO = m.USER_NO
	                )
				</where>
				order by m.USER_NO
				)
			where rownum &lt;= #{endRow}
			)
		where rn &gt;= #{startRow}
	</select>
	
	<select id="countMember" resultType="java.lang.Integer">
		select count(*)
		from member m
		<where>
			<choose>
				<when test="searchType == 'all'">
				1=1
				</when>
				<when test="searchType == 'no'">
				m.user_no = #{searchKeyword}
				</when>
				<when test="searchType == 'id'">
				m.user_id like '%' || #{searchKeyword} ||'%'
				</when>
				<when test="searchType == 'name'">
				m.user_name like '%' || #{searchKeyword} ||'%'
				</when>
				<when test="searchType == 'phone'">
				m.phone = #{searchKeyword}
				</when>
			</choose>
			
			AND not EXISTS (
                   SELECT 1 
                   FROM role r 
                   WHERE r.USER_NO = m.USER_NO
               )
		</where>
	</select>
	
	<update id="updateUser" parameterType="Member">
		update member
		set user_id = #{userId}
			,user_name = #{userName}
			,phone = #{phone}
			,point = #{point}
			,status = #{status}
		where user_no = #{userNo}
	</update>
	
	<select id="userDongne" parameterType="int" resultMap="coordResultMap">
		select *
		from coords
		left join member_coords using (coord_no)
		left join member using(user_no)
		where user_no = #{userNo}
	</select>
	
	<select id="userLocation" parameterType="int" resultMap="locationResultMap">
		select *
		from location
		left join member_location using (location_no)
		left join member using(user_no)
		where user_no = #{userNo}
	</select>
	
</mapper>