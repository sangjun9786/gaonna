<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberMapper">

	<resultMap type="Member" id="memberResultMap">
		<result column="USER_NO" property="userNo"/>
		<result column="USER_ID" property="userId"/>
		<result column="USER_PWD" property="userPwd"/>
		<result column="USER_NAME" property="userName"/>
		<result column="ROLE_TYPE" property="roleType"/>
		<result column="MAIN_COORD" property="mainCoord"/>
		<result column="MAIN_LOCATION" property="mainLocation"/>
	</resultMap>
	
	<insert id="insertMember" parameterType="Member">
	    <selectKey keyProperty="userNo" resultType="int" order="BEFORE">
	        SELECT seq_me.nextval FROM dual
	    </selectKey>
	    INSERT INTO member (USER_NO, USER_ID, USER_PWD, USER_NAME, PHONE)
	    VALUES (#{userNo}, #{userId}, #{userPwd}, #{userName}, #{phone})
	</insert>
	
	<!-- 이메일 인증할 때 기준으로 가입일이 저장되도록 함 -->
	<update id="confirmEmailInsert">
		update member
		set STATUS = 'Y',
			ENROLLDATE = SYSDATE
		where USER_NO = (select USER_NO
						from token
						where TOKEN_NO = #{tokenNo})
	</update>
	
	<select id="checkUserId" parameterType="string" resultType="int">
		select count(*)
		from member
		where user_id = #{id}
	</select>
	
	<select id="selectUserId" parameterType="_int" resultType="string">
		select user_id
		from member
		where user_no = #{userNo}
	</select>
	
	<select id="loginMember" resultMap="memberResultMap">
	    select 
	        m.USER_NO,
	        m.USER_ID,
	        m.USER_PWD,
	        m.USER_NAME,
	        m.PHONE,
	        m.point,
	        m.ENROLLDATE,
	        m.MODIFYDATE,
	        m.STATUS,
	        m.MAIN_COORD,
	        m.MAIN_LOCATION,
	        case 
	            when exists (
	                select 1
	                from ROLE r
	                where r.USER_NO = m.USER_NO
	            ) then 'Y'
	            else 'N'
	        end as ROLE_TYPE
	    from MEMBER m
	    where m.USER_ID = #{userId}
	</select>
	
	<select id="selectRoleType" parameterType="_int" resultType="string">
		select role_type
		from role
		where user_no = #{userNo}
	</select>
	
	<update id="updateId">
		update member
		set user_id = #{userId},
			status = 'U'
		where user_no = #{userNo}
	</update>
	
	<update id="updateName">
		update member
		set user_name = #{userName}
		where user_no = #{userNo}
	</update>
	
	<update id="updatePhone">
		update member
		set phone = #{phone}
		where user_no = #{userNo}
	</update>
	
	<update id="updatePwd">
		update member
		set user_pwd = #{userPwd}
		where user_no = #{userNo}
	</update>
	
	<update id="updateMainCoord" parameterType="Member">
		update member
		set MAIN_COORD = #{mainCoord}
		where user_no = #{userNo}
	</update>
	
	<update id="deleteMainCoord" parameterType="Member">
		update member
		set MAIN_COORD = null
		where user_no = #{userNo}
	</update>
	
	<update id="updateMainLocation" parameterType="Member">
		update member
		set MAIN_LOCATION = #{mainLocation}
		where user_no = #{userNo}
	</update>
	
	<update id="deleteMainLocation" parameterType="Member">
		update member
		set MAIN_LOCATION = null
		where user_no = #{userNo}
	</update>
	
	<select id="selectUserNo" parameterType="Member" resultType="int">
		select user_no
		from member
		where user_id = #{userId}
		and status = 'Y'
	</select>
	
	<select id="selectUserPwd" parameterType="int" resultType="string">
		select user_pwd
		from member
		where user_no = #{userNo}
	</select>
</mapper>
