<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans 
           https://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context 
           https://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx 
           https://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 1) 데이터 소스 설정 (Oracle 예시) -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@192.168.150.31:1521:xe"/
<!--         <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/> -->
<!--         <property name="url" value="jdbc:oracle:thin:@192.168.195.200:1521:xe"/>> -->
        <property name="username" value="yami"/>
        <property name="password" value="yami"/>
    </bean>

    <!-- 2) MyBatis SqlSessionFactoryBean 설정 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- mybatis-config.xml 경로 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- Mapper XML 파일들이 있는 폴더 -->
       <property name="mapperLocations" value="classpath:mappers/*-mapper.xml"/>
        
            <!-- ✅ 이거 추가 -->
    <property name="typeAliasesPackage" value="com.gaonna.yami.product.model.vo"/>
        
    </bean>

    <!-- 3) SqlSessionTemplate (실제 DAO에서 주입 받을 SqlSession) -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>

    <!-- 4) 트랜잭션 처리 -->
    <tx:annotation-driven/>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 5) @Service, @Repository, @Component 어노테이션을 스캔할 패키지 -->
    <context:component-scan base-package="com.gaonna.yami" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>

</beans>
